version: '3.8'

services:
  # Base de donn√©es MySQL (Production)
  mysql:
    image: mysql:8.0
    container_name: yshare_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./backend/yshare.sql:/docker-entrypoint-initdb.d/yshare.sql
    networks:
      - yshare_prod_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Backend Node.js (Production)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: yshare_backend_prod
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env.prod
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
    volumes:
      - ./backend/media:/app/media
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - yshare_prod_network
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React (Production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: yshare_frontend_prod
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=https://api.yshare.com
    depends_on:
      - backend
    networks:
      - yshare_prod_network
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: yshare_nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - yshare_prod_network

volumes:
  mysql_prod_data:

networks:
  yshare_prod_network:
    driver: bridge 