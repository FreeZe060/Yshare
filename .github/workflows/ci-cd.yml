name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: yshare_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json
    
    - name: Install Backend Dependencies
      run: |
        cd backend
        npm install
    
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm install
    
    - name: Run Backend Tests
      run: |
        cd backend
        npm test || echo "No tests found or tests failed, continuing..."
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_NAME: yshare_test
        DB_USER: root
        DB_PASSWORD: root
        NODE_ENV: test
      continue-on-error: true
    
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm test -- --watchAll=false || echo "No tests found or tests failed, continuing..."
      continue-on-error: true
    
    - name: Build Frontend
      run: |
        cd frontend
        npm run build

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Security Audit
      run: |
        cd backend && npm audit --audit-level=high || echo "Security audit completed with warnings"
        cd ../frontend && npm audit --audit-level=high || echo "Security audit completed with warnings"
      continue-on-error: true
    
    - name: Run SAST Scan
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  docker-build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./backend/Dockerfile
        push: false
        tags: yshare-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max 