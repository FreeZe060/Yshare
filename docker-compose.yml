version: '3.8'

services:
  # Base de données MySQL
  mysql:
    image: mysql:8.0
    container_name: yshare_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: yshare
      MYSQL_USER: yshare_user
      MYSQL_PASSWORD: yshare_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/yshare.sql:/docker-entrypoint-initdb.d/yshare.sql
    networks:
      - yshare_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: yshare_backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=yshare
      - DB_USER=yshare_user
      - DB_PASSWORD=yshare_password
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - yshare_network
    # Hot reload pour le développement
    command: sh -c "npm install && npm run dev"

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: yshare_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - yshare_network
    # Hot reload pour le développement
    command: sh -c "npm install && npm run dev"

volumes:
  mysql_data:

networks:
  yshare_network:
    driver: bridge