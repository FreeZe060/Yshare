const notificationService = require('../services/NotificationService');

exports.getAllNotifications = async (req, res) => {
    try {
        if (!req.user) {
            console.log("‚ùå Utilisateur non authentifi√© (getAllNotifications)");
            return res.status(403).json({ message: "Utilisateur non authentifi√©." });
        }

        console.log(`üì© R√©cup√©ration des notifications pour userId=${req.user.id}, role=${req.user.role}`);

        const notifications = await notificationService.getNotificationsByUser(req.user.id);

        console.log(`‚úÖ ${notifications.length} notifications r√©cup√©r√©es`);
        res.status(200).json(notifications);
    } catch (error) {
        console.error("‚ùå Erreur dans getAllNotifications :", error.message);
        res.status(500).json({ message: error.message });
    }
};

exports.getNotificationById = async (req, res) => {
    try {
        if (!req.user) {
            console.log("‚ùå Utilisateur non authentifi√© (getNotificationById)");
            return res.status(403).json({ message: "Utilisateur non authentifi√©." });
        }

        const { notificationId } = req.params;
        console.log(`üîç getNotificationById: userId=${req.user.id}, notifId=${notificationId}`);

        const notification = await notificationService.getNotificationById(
            req.user.id,
            notificationId,
            req.user.role === "Administrateur"
        );

        console.log("‚úÖ Notification trouv√©e :", notification);
        res.status(200).json(notification);
    } catch (error) {
        console.error("‚ùå Erreur dans getNotificationById :", error.message);
        res.status(500).json({ message: error.message });
    }
};

exports.markNotificationAsUnread = async (req, res) => {
    try {
        if (!req.user) {
            console.log("‚ùå Utilisateur non authentifi√© (markNotificationAsUnread)");
            return res.status(403).json({ message: "Utilisateur non authentifi√©." });
        }

        const { notificationId } = req.params;
        console.log(`üîÑ markNotificationAsUnread: userId=${req.user.id}, notifId=${notificationId}`);

        const response = await notificationService.markNotificationAsUnread(req.user.id, notificationId);

        console.log("‚úÖ Notification marqu√©e comme non lue :", response);
        res.status(200).json(response);
    } catch (error) {
        console.error("‚ùå Erreur dans markNotificationAsUnread :", error.message);
        res.status(500).json({ message: error.message });
    }
};

exports.markNotificationAsRead = async (req, res) => {
    try {
        if (!req.user) {
            console.log("‚ùå Utilisateur non authentifi√© (markNotificationAsRead)");
            return res.status(403).json({ message: "Utilisateur non authentifi√©." });
        }

        const { notificationId } = req.params;
        console.log(`üîÑ markNotificationAsRead: userId=${req.user.id}, notifId=${notificationId}`);

        const response = await notificationService.markNotificationAsRead(req.user.id, notificationId);

        console.log("‚úÖ Notification marqu√©e comme lue :", response);
        res.status(200).json(response);
    } catch (error) {
        console.error("‚ùå Erreur dans markNotificationAsRead :", error.message);
        res.status(500).json({ message: error.message });
    }
};

exports.markAllNotificationsAsRead = async (req, res) => {
    try {
        if (!req.user) {
            console.log("‚ùå Utilisateur non authentifi√© (markAllNotificationsAsRead)");
            return res.status(403).json({ message: "Utilisateur non authentifi√©." });
        }

        console.log(`üîÅ Marquage de toutes les notifications comme lues pour userId=${req.user.id}`);

        const response = await notificationService.markAllNotificationsAsRead(req.user.id);

        console.log("‚úÖ Toutes les notifications ont √©t√© marqu√©es comme lues :", response);
        res.status(200).json(response);
    } catch (error) {
        console.error("‚ùå Erreur dans markAllNotificationsAsRead :", error.message);
        res.status(500).json({ message: error.message });
    }
};

exports.deleteNotification = async (req, res) => {
    try {
        if (!req.user) {
            console.log("‚ùå Utilisateur non authentifi√© (deleteNotification)");
            return res.status(403).json({ message: "Utilisateur non authentifi√©." });
        }

        const { notificationId } = req.params;
        console.log(`üóëÔ∏è deleteNotification: userId=${req.user.id}, notifId=${notificationId}, role=${req.user.role}`);

        const response = await notificationService.deleteNotification(
            req.user.id,
            notificationId,
            req.user.role === "Administrateur"
        );

        console.log("‚úÖ Notification supprim√©e :", response);
        res.status(200).json(response);
    } catch (error) {
        console.error("‚ùå Erreur dans deleteNotification :", error.message);
        res.status(500).json({ message: error.message });
    }
};